//Ask about...
//Sens name
//Oh, well I'm Sens, and Silver calls be Gold because that's my name.
//Why do I get people to call me Sens if gold is my name? It's funny!

OpenSakuraMenu
{
		"\0\s[0]\b2"
		--
		MenuRun
}
MenuRun
 {	
 	wd = GetWeekDay
 	ap = GetAP
 	nowmin = Getnowmin
 	nowhour = Getnowhour
	--
	"\n\n\_q\b2" 
	--
	if lastTalk != ""
	{
	  "\![*]\q[Repeat Last Dialogue,OnLastTalk]\n\n[half]"
	}
	--
 	"\![*]\q[Say something,OnAiTalk]\n"
	--
	"\![*]\q[Pokedex,OnMenuPokedex]\n/
	\![*]\q[Gold's Pokemon,OnGoldmon]\n/
	\![*]\q[Options,configmenu]\n/
	\![*]\q[Functions,dosomething]\n/
	\![*]\q[PokeeMan,OnTypeMon]\n/
 	\![*]\q[Nevermind,CANCEL]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
}

//Leave this alone
OnLastTalk 
{
"%(lastTalk)\e"
}

//This is figuring out what day of the week it is. Leave it alone.
GetWeekDay
{
	if weekday == 0
	{"Sun"}
	elseif weekday == 1
	{"Mon"}
	elseif weekday == 2
	{"Tue"}
	elseif weekday == 3
	{"Wed"}
	elseif weekday == 4
	{"Thu"}
	elseif weekday == 5
	{"Fri"}
	else
	{"Sat"}
}

//This is finding out whether it's AM or PM. Leave it alone.
GetAP
{
 	if hour >= 0 && hour <= 11
 		{"AM"}
 	else
 		{"PM"}
}

//This is figuring out the minute. Leave it alone.
Getnowmin
{
	if minute >= 0 && minute <=9
		{"0%(minute)"}
	else
		{"%(minute)"}
}

//This is figuring out the hour. Leave it alone.
Getnowhour
{
	if hour12 >= 0 && hour12 <=9
		{"0%(hour12)"}
	else
		{"%(hour12)"}
}

//If someone selects an option linked to BACKTOMENU, it will go back to MenuRun.
Select.BACKTOMENU
	{
		MenuRun
	}
	
	
OnGoldmon
{
	"\i[55]\_qSilklay Atticus Norma\n/
	\_b[img\_G_Silklay.png,use_self_alpha] \_b[img\_G_Atticus.png,use_self_alpha] \_b[img\_G_Norma.png,use_self_alpha]/
	"
	//Ask how he got...
	
	//Silklay
	//So the Professors have this Starter program, where they pick three rare or endangered Pokemon to be their sort of mascots to start off the Pokedex for that region.
	//They give them out to new trainers to ensure they have good homes, sort of propogate the species thing...
	//For Johto, it's supposed to be Chikorita, Cyndaquil, and Totodile.
	//but, when Professor Elm offered me and Tala starter Pokemon, he didn't /have/ the usual three avalible. The Cyndaquil they had was too attached to the lab tech that raised it, and the Totodile was already taken by another trainer.
	//So they got backups! Different three stage evolutions that are still easy for new trainers to raise.
	//There was the last Chikorita, a Mareep, and a Ralts!
	//The Ralts waddling around in her cute little nightgown body touched my heart instantly... I thought it was the cutest thing ever.
	//The professor said that raising a Ralts would be the hardest, but I was unintimidated by the idea. In fact I thought the challenge sounded fun.
	//Turns out... I was just a LITTLE overconfident. All she knew was Growl! We would've been toast if Atticus hadn't saved us...
	//I remember it like it was yesterday... Me, just barely having managed to run through the corest, cradling a baby Pokemon in my arms...
	//Then, the second I get to town, I get called back, and THIS GUY [nudges Silver] beats up my poor defensless baby pokemon with HIS stolen one for no reason.
	//I think Silklay's forgiven him by now XD She and Cloud have made amends.
	//I think of all my Pokemon, she has the most out time. She likes walking around with me and will sometimes act as my interpreter.
	//She acts a lot like ME, so obviously that means I like her.
	
	//Atticus
	//Atticus is my Houndoom!!! He was the fist Pokemon I ever caught. I'd just gotten Silklay, but she was just a baby Ralts and only knew Growl. We got lost in the forest and I had to run us away from every Pokemon! Atticus, who was just a Houndour back then- kept following us. I was worried he was going to attack us, because even though he was really small, he was really big to me and Silklay back then. We'd be toast if he attacked us with fire...
	//S: T_T
	//Ok that was dumb. He never did attack us though! He seemed to notice we were being cornered and followed us around protecting us from the other wild Pokemon! When we finally got out of the forest, I asked if he wanted to come with us.
	//I named him "Atticus" because it sounds like "Attack" but a name. He WAS my only attacking Pokemon at that point, so I named him after it.
	//He loves protecting people, that parts never changed. He ACTS like a big, scary, snarling wolf who's going to bite you- and he's got the power to back it up- but he just does it to scare off opponants before they try and fight us. He's never been badly behaved or hurt any people or seriously injured a Pokemon.
	//Snowpoff
	
	//Norma
	//Norma the Delcatty!
	//I was at this rickety old building- huge holes in the floor, place was falling apart. I was with someone, looking for some Pokemon...
	//Anyways, this Skitty kept following me around. Kept getting in my way, jumping in front of me and running between my legs. I felt like I was going to trip because of her!
	//The person I was with said "It looks like she likes you! Maybe you should take her with you!" and I denied it because... Well, okay, I ACT like a total becon of morality- BUT I was still pretty vain back then. I didn't want her not because she kept trying to trip me... but I just didn't like normal types!
	//But I also didn't want to LOOK like a jerk in front of him, so I let her climb onto my shoulder and... Kind of planned to ditch her later. I called her "Norma" because I just viewed her by her Normal type.
	//She was real eager to prove herself in battle though, jumping in when I DIDN'T CALL FOR HER to beat the Pokemon I was going after. I didn't have a lot of Pokemon back then, so even though I wasn't too keen on her I let her stick around.
	//It wasn't until a battle with THIS GUY [wrapping arm around Silver's shoulder, pointing at his cheek] that she really impressed me!
	//Uhg...
	//He'd wiped out the rest of my team! Silklay, Atticus, Honoa- They were wiped out. All I had left was... Norma!
	//But we worked out a stragety- I learned the real power of normal types then. They have sooo much flexibility and know so many weird moves. We were able to stun his Pokemon, locking them out of making moves, as she slowly doubleslapped them to victory.
	//So, thanks RIVAL, you got me to be a better trainer and learn how to kick your butt better in the future!
	
	//Honoa
	//G: Honah! My HO-OH KILLING LANTURN!
	//S: Why did you ask why did you ask...
	//G: Picture this: Me, new trainer, three Pokemon, a shy Kirlia, a determined Houndour, and some Normal type I didn't care about.
	//G: There's this real hot shot at the top of this tower- and I'm with my friend or whatever here to beat him and get his items! All I want is the item! And I'm prepared for a fight.
	//G: Guy picks up his Pokeball and-
	//S: Uhhhggg
	//G: Sends out a HO-OH.
	//S: No he didn't. Ho-Ohs are incredibly rare, barely ever pictured, and the Person in This Well Visited Jotoh City doesn't just have a Ho-Oh.
	//G: The Ho-Oh WIPES MY TEAM. It's got legendary stats! How am I supposed to match up to that!
	//S: Or maybe it's a normal pokemon with normal stats and you just had unevolved young Pokemon...
	//G: So I think: Ho-Ohs are Fire/Flying type-
	//S: Theoretically.
	//G: I need something that's either electric, or water type!
	//G: I go searching for a new pokemon, but with my bad lure and back of ability to surf, finding let alone catching good water types is a pain. And electric types are just harder to come by in general. When I did find them, like Magnemite, they had downsides. Magnemite is part Steel, which is weak to fire, and would nullify some of my advantage.
	//G: Then I found the PERFECT Pokemon. [Crawled on land] A Water/Electric type, Chinchou!
	//G: I was never a real fan of Chinchou. It's not that I didn't like them, just that I never thought of them. But now, it was my solution to everything!
	//G: I caught him, spent a few days training, and KICKED THAT HO-OHS BUTT!
	//S: Except it wasn't a Ho-Oh because you made that up.
	//G: Well it IS true, weather you believe it or not!
	
	//Banco
	//Banco is my Tropius! I found her in a cave.
	//I know! Weird, right? A Tropius in Jotoh? A Tropius in a CAVE?
	//Now, I liked Tropius, but I'd never actually seen one. Because there aren't any that lived here.
	//Getting through this cave was difficult. I was tired and I went to sit down near a water pool, which I thought looked safe... and this GIANT, TOWERING Pokemon approached me!!! It leaned down, and I thought it was gonna eat me, but it turns out it was just offering a banana!
	//After I recovered from my shock, I asked what she was doing here!
	//I got the sense that she had been here a while. She got last traveling to... Somewhere, but must've lost track and landed in Jotoh. She had been taking care of the Pokemon native to that cave.
	//Tropius are grass types and get power from sunlight! So I felt like the cave was no place for her to be. Her grassy wings looked yellowed and were frayed, and she could barely even fly anymore.
	//I insisted that she leave that cave to go back to the outside world! She didn't want to leave her cave friends though, as she'd been nurturing them all this time. But the cave pokemon assured her they were fine and wanted her to go her own way.
	//That's... What I got from it at least. They didn't talk.
	//So... Tropius followed me out! And I made her part of my team. She was really happy to stretch her wings finally.
	//I did a lot of training with her- but it was slow! She's a REAL powerhouse actually. She knows body slam and I do NOT envy the Pokemon she's SMASHED. I feel kind of guilty sometimes! But importantly- Her wings got back into shape, really beautiful too, and she's a VERY strong flier! She takes me EVERYWHERE. Even when I don't have my main team with me, I always take Banco so she can fly me from place to place!
	
	//Konkurs
	//Drugia deciding to live with my Mom was a bit of a hit to the team... I mean, he was a great battler and we all loved him! But it was the right decision letting him stay at home with my Mom.
	//
	
	
	//Other Pokemon
	
	//Bango
	//When Banco followed me out of the cave, a small Whooper did to! But the Whoopers not on my team- Bango decided to go follow my friend Crystal. I haven't talked to her in a while! I wonder how Bango's doing and if she's even a Whooper still.
}
	
	
	
	
	

//If someone selects configmenu, this will lead to TalkConfig.
Select.configmenu
	{
		TalkConfig
	}

//--TalkConfig
//This menu allows the user to change their name and other information, as well as put in their birthday and change how often the ghost speaks.

TalkConfig
{
	"\0\b[2]\_q\" 
	//This bit of dialogue sets up a large balloon and a quick session, like above, so all the text will appear immediately.
	--
	"f[bold,1]Your name:\f[bold,0] %(username) \f[sup,1](\q[Change it?,TEACHNAME])\f[sup,0]\n"
	--
	"\f[bold,1]Your pronouns:\f[bold,0] %(heshe)/%(himher)/%(hisher) \f[sup,1](\q[Change them?,TEACHPRONOUN])\f[sup,0]\n"
	--
	"\f[bold,1]Your birthday:\f[bold,0] %(birthdayprint) \f[sup,1](\q[Change it?,TEACHBDAY])\f[sup,0]\n\n"
	--
	"\f[bold,1]Talk Rate:\f[bold,0] - every %(talktime) \f[sup,1](\q[Change it,talkinter])\f[sup,0]\n\n"
	--		
		{
		"\![*]Enable Uninstall? (NOW : %(deleteshitai))\n\q[ON,deleteon] \q[OFF,deleteoff]\n\n[half]\n"
		}
	--
	"\![*]\q[Back to the menu,BACKTOMENU]\e"
}

//This and the next few set up the pronouns, as you can see by the linkedfunction names.

Select.TEACHPRONOUN
{
	"\0\s[0]What pronouns do you want?\w5\n\n[half]\_q/
		\![*]\q[He-His-Him,choicemasc]\n/
		\![*]\q[She-Her-Her,choicefem]\n/	
		\![*]\q[They-Their-Them,choiceneither]\e"
}

Select.choicemasc
{
	presuffix = "masculine"
	himher = "him"
	heshe = "he"
	hisher = "his"
	hesshes = "he's"
	doesdo = "does"
	--
	"\0\s[0]The pronouns are now he him and his.\e"
}

Select.choicefem
{
	presuffix = "feminine"
	himher = "her"
	heshe = "she"
	hisher = "her"
	hesshes = "she's"
	doesdo = "does"
	--
	"\0\s[0]The pronouns are now she her and her.\e"
}

Select.choiceneither
{
	presuffix = "undefine"
	himher = "them"
	heshe = "they"
	hisher = "their"
	hesshes = "they're"
	doesdo = "do"
	--
	"\0\s[0]The pronouns are now they them and their.\e"
}

//Here are some examples of these envelopes in use.
//"%(heshe) left that there."
//"%(hisher) work is really cool."
//"I'll ask %(himher) later."
//"%(hesshes) really good at it."

//These two options toggle whether or not you can delete your ghost. Leave them alone.

Select.deleteon
{
	deleteshitai = "ON"
	TalkConfig
}

Select.deleteoff
{
	deleteshitai = "OFF"
	TalkConfig
}


//This next set of functions handles inputting the user's birthday.

Select.TEACHBDAY
	{	
		"\0\s[0]What month were you born? \w8Name or number is fine.\![open,inputbox,OnUserBornMonth,-1]\e"
		
		//You can replace the dialogue up to the \![open,inputbox,OnUserBornMonth,-1] tag, leave that alone. You'll need the input box to get the information.
	}

//--OnUserBornMonth
//This takes the value that the user put into the input box above and evaluates it. Most of this you won't have to touch, but I'll explain what it's doing anyway.

OnUserBornMonth
{
	_tempmonth = TOSTR(reference0) //this stores what the user put in as a variable called _tempmonth
	_tempmonth = TOLOWER(_tempmonth) //changes it to lowercase
	
	//this is attaching the right value to the input from the user
	if _tempmonth == "january" || _tempmonth == "1" {bornmonth = 1; bornmonthprint = "January"}
	elseif _tempmonth == "february" || _tempmonth == "2" {bornmonth = 2; bornmonthprint = "February"}
	elseif _tempmonth == "march" || _tempmonth == "3" {bornmonth = 3; bornmonthprint = "March"}
	elseif _tempmonth == "april" || _tempmonth == "4" {bornmonth = 4; bornmonthprint = "April"}
	elseif _tempmonth == "may" || _tempmonth == "5" {bornmonth = 5; bornmonthprint = "May"}
	elseif _tempmonth == "june" || _tempmonth == "6" {bornmonth = 6; bornmonthprint = "June"}
	elseif _tempmonth == "july" || _tempmonth == "7" {bornmonth = 7; bornmonthprint = "July"}
	elseif _tempmonth == "august" || _tempmonth == "8" {bornmonth = 8; bornmonthprint = "August"}
	elseif _tempmonth == "september" || _tempmonth == "9" {bornmonth = 9; bornmonthprint = "September"}
	elseif _tempmonth == "october" || _tempmonth == "10" {bornmonth = 10; bornmonthprint = "October"}
	elseif _tempmonth == "november" || _tempmonth == "11" {bornmonth = 11; bornmonthprint = "November"}
	elseif _tempmonth == "december" || _tempmonth == "12" {bornmonth = 12; bornmonthprint = "December"}
	
	else //if the month isn't a valid month, like 32 or something.
	{
			"\0\s[0]That's not a valid month. Try again."
			--
			"\![open,inputbox,OnUserBornMonth,-1]\![set,balloontimeout,-1]\e"
	}
	--
	//If it's a valid month
	
	"\0\s[0]So you were born in %(bornmonthprint).\n\w8What day was it?"
	--
	"\![open,inputbox,OnUserBornDay,-1]\![set,balloontimeout,-1]\e"
	
	//Here you can see the use of a bornmonthprint envelope to show the user what month they put in. Notice that it opens an inputbox at the end the same way the one above did.
}

//This adds an appropriate suffix to the number for the day. No need to mess with this.

Printday
{
	if bornday == 1 || bornday == 21 || bornday == 31
	{	"%(bornday)st"	}
	elseif bornday == 2 || bornday == 22
	{	"%(bornday)nd"	}
	elseif bornday == 3 || bornday == 23
	{	"%(bornday)rd"	}
	else
	{	"%(bornday)th"	}
}	

//--OnUserBornDay
//This is much like the above function OnUserBornMonth. It'll take the value the user put in for the day and analyze it. 

OnUserBornDay
{
	_tempday = reference0 //storing the input in _tempday
	_tempday = TOLOWER(_tempday) //changes it to lowercase
	_tempday = REPLACE(_tempday,"st","") //if the user types something like 2nd, 3rd, etc, this will make it just the number. It'll just add the suffix back later on the one that actually shows.
	_tempday = REPLACE(_tempday,"nd","")
	_tempday = REPLACE(_tempday,"rd","")
	_tempday = REPLACE(_tempday,"th","")
	_tempday = TOINT(_tempday) //Converts it to an integer
	
	if ((bornmonth == 1 || bornmonth == 3 || bornmonth == 5 || bornmonth == 7 || bornmonth == 8 || bornmonth == 10 || bornmonth == 12) && _tempday >= 1 && _tempday <= 31) || (bornmonth == 2 && _tempday >= 1 && _tempday <= 29) || ((bornmonth == 4 || bornmonth == 6 || bornmonth == 9 || bornmonth == 11) && _tempday >= 1 && _tempday <= 30) //This ugly function checks if the day falls into a valid range. If it does, we set some variables and continue down.
	{
		bornday = _tempday
		borndayprint = Printday
		userbirthday = "%(bornmonth)month %(bornday)day"
		birthdayprint = "%(bornmonthprint) %(borndayprint)"
		
		"%(birthchecked)"
		//Mostly defining envelopes and values in here. Eagle-eyed readers will notice the new envelope birthchecked on its own line like a tiny king.
	}
	else //If the day isn't valid, like the 10046th or something, this will open the input box again and have a \e so the dialogue below doesn't play.
	{
		"\0\s[0]That's not a valid day. Try again."
		--
		"\![open,inputbox,OnUserBornDay,-1]\e"
	}	
}

//--birthchecked
//This is the new envelope you saw me point out above.

birthchecked
{
	if userbirthday == dayslot //if today is the user's birthday
		{
			"\0\s[0]It's the user's birthday.\w8\1\s[10]Happy birthday, %(username).\e"
		}
	elseif userbirthday == "12month 25day"
		{
			"\0\s[0]The user was born on Christmas.\w8\1\s[10]Happy birthday, %(username). \w5\s[15]AND JESUS!\w8\0\s[9]\n\n[half]We're supposed to be a blank template, knock it off before we get in trouble.\e"
		}
	else //if the birthday is not listed above.
		{
			"\0\s[0]Your birthday is %(bornmonthprint) %(borndayprint). We'll remember.\e"
		}
}

//--Talk Rate
//This is when the user chooses to adjust the talk rate in the config menu. The talk rate is how often the ghost will read some dialogue from aitalk.dic.

Select.talkinter
 	{
 		"\0\s[0]\b2How often should we speak?\w8\1\s[10]The interval is currently set to %(talktime)./
		//note the new envelope here for %(talktime). You'll see it again in a second. You can replace the dialogue above with whatever you like, just make sure it ends with ./ and not \e.
 		\0\n\n[half]/
 		\![*]\q[Every 30 seconds,TALKMAX]\n/
		\![*]\q[Every minute,TALKHIGH]\n/
 		\![*]\q[Every 3 minutes,TALKNORMAL]\n/
		\![*]\q[Every 5 minutes,TALKPOOR]\n/
 		\![*]\q[Don't speak,TALKNONE]\n\n[half]/
		\![*]\q[Don't change,TalksTill]\e"
	}

//If the user doesn't want to change the rate.
Select.TalksTill
	{
		"\0\s[0]No change to the talk rate.\e"
	}

//If the user chooses every 30 seconds.
Select.TALKMAX
	{
 		talktime = "30 seconds" //this sets up the envelope properly
		aitalkinterval = 30 //this changes the actual rate
		
 		"\0\s[0]We will speak every 30 seconds.\e"
	}

//If the user chooses every minute.
Select.TALKHIGH
	{
 		talktime = "minute"
		aitalkinterval = 60
		
 		"\0\s[0]We will speak every minute.\e"
	}

//If the user chooses every three minutes.
Select.TALKNORMAL
	{
 		talktime = "3 minutes"
		aitalkinterval = 180
		
 		"\0\s[0]We will speak every three minutes.\e"
	}

//If the user chooses every five minutes. This is the default rate the ghost will start up in, as seen in bootend.dic.
Select.TALKPOOR
	{
 		talktime = "5 minutes"
		aitalkinterval = 300
		
 		"\1\s[10]We will speak every five minutes.\e"
	}

//If the user chooses to not have them speak.
Select.TALKNONE
	{
 		talktime = "...actually we won't talk at all"
		aitalkinterval = 0
		
		"\0\s[0]We will not speak.\e"
	}

	
//This is when the user chooses to change their name. It's linked to the functions outlined in nameteach.dic.
Select.TEACHNAME
	{
		OnTeachName	
	}

	
//If the user selects cancel in a menu.
Select.CANCEL
	{
		"\0\s[0]This is a cancel message.\e"
		
		"\0\s[0]This is another cancel message.\e"
 	}

	
//Going back to the MenuRun function we finished above, this is if someone selects the Functions option, linked to dosomething. As you can see, it ends up as Select.dosomething.

Select.dosomething
{
 		"\0\s[0]\b2This is the first function menu intro.\n\n"
 		"\0\s[0]\b2This is the second function menu intro.\n\n"
		"\0\s[0]\b2This is the third function menu intro.\n\n"
		--
 		"\![*]\q[Open Calendar,CALENDAR]\n/
		\![*]\q[Check Email,MailCheck]\n/
		\![*]\q[Open SSP Preferences,sspconfig]\n/
		\![*]\q[Empty Recycle Bin,ChoiceGarbagecan]\n/
		\![*]\q[System Information,ChoiceSystemInformation]\n\n/
 		\![*]\q[Back to main menu,BACKTOMENU]\e"
}

//When the user clicks Open Calender. This will open the calender function of SSP, an in-built feature that you don't have to worry about in the least.
Select.CALENDAR
{
	"\0\s[0]Opening the calender.\w8\![open,calendar]\e"
}

//When the user chooses SSP preferences. This will open the same window that shows up if you right click your ghost and go to Utilities - Preferences.
Select.sspconfig
{
	"\0\s[0]Opening the SSP config menu.\w8\![open,configurationdialog]\e"
}

//If the user chooses to empty the recycle bin.
Select.ChoiceGarbagecan
{
	_gomicheck = FUNCTIONEX("gomi.dll", "-n")	//for those curious, it's referencing a SAORI, which are optional user-made plug-in dlls you can download to enable different functions on your ghost. gomi.dll is one included with this template.
	
	if _gomicheck == 0 //If the recycle bin is empty.
	{
		"\0\s[0]Triangle, go check the recycle bin.\w8\1\s[19]Fine.\w8\w8\s[-1]\w8\w8\w8\w8\w8\1\s[10]\cIt was empty.\e"
	}
	elseif _gomicheck >= 1 //If the recycle bin is full.
	{
		"\0\s[0]Emptying the recycle bin.\w8\1\s[19]I'm going.\w8\w8\s[-1]\w8\w8\w8\w8\w8\![raise,OnGarbagecanEmpty]\w9\w9\w9\1\s[10]\cDone.\e"
		
		"\0\s[0]This is the second recycle bin emptying dialogue.\w8\1\s[19]I'm going.\w8\w8\s[-1]\w8\w8\w8\w8\w8\![raise,OnGarbagecanEmpty]\w9\w9\w9\1\s[10]\cDone.\e"
		
		//Somewhat similar to the above, but notice the \![raise],OnGarbagecanEmpty] tag in there. That's what actually empties the recycle bin, so make sure you don't delete that tag.
	}
}


//This is for the SAORI, don't touch it.
OnGarbagecanEmpty
{
	_gomi = FUNCTIONEX("gomi.dll", "-f")
}

//This is when the user chooses System Information. Don't touch any of this either. For those curious though, note that this is done using another SAORI, this time saori_cpuid.dll.
Select.ChoiceSystemInformation
{
	os_name = FUNCTIONEX("saori_cpuid.dll","os.name")
	os_version = FUNCTIONEX("saori_cpuid.dll","os.version")
	cpu_name = FUNCTIONEX("saori_cpuid.dll","cpu.name")
	cpu_clockex = FUNCTIONEX("saori_cpuid.dll","cpu.clockex")
	"/
	\0\s[0]\b[2]/
	\_q\f[bold,1]OS:\f[bold,0] %(os_name) %(os_version)\n/
	\f[bold,1]Memory Load:\f[bold,0] %(memoryload)%\n/
	\f[bold,1]Physical Memory:\f[bold,0] %(memoryavailphys) KB\n/
	\f[bold,1]CPU:\f[bold,0] %(cpu_name) %(cpu_clockex)MHz\n/
	\f[bold,1]Ukagaka:\f[bold,0] %property[baseware.version]/
	\e"
}
	
//This is when the user chooses to check their email. The rest of this function plays out in etc.dic.
Select.MailCheck
	{
		"\![biff]\e"
	}


	
//---- OnChoiceTimeout ---------------------------------------------------------
//If the user is given a menu with choices, but doesn't pick one of the choices, it will eventually time out.

OnChoiceTimeout
 {
	"\0\s[0]The menu has timed out.\e"
 }

 
//---- Secondary Character Menu ---------------------------------------------------------
//This section has to do with the menu for the second character.

OpenKeroMenu
 {
	 //You can ask about Silver's Pokemon, but they're ??? until you've gotten the Anchor.dic on them.
	 
	"\1\s[10]\b[2]"
	--
	"This is a menu introduction dialogue."
 	--
	"\n\n[half]/
	\![*]\q[Update,keroupdatecheck]\n/
 	\![*]\q[Bug report,bugreport]\n\n/
	\![*]\q[Test variable,testvariable]\n\n/
	\![*]\q[Nothing,keroCANCEL]\e"
}

//If you click cancel.
Select.keroCANCEL
{
	"\1\s[10]This is menu cancel dialogue.\e"
}

//This is when they select bug report. This is mostly meant to briefly give the user information about you, the creator, and how to report a problem to you. This can be handy if the person forgot where they got their ghost or how to contact you. Add whatever info you like here.
Select.bugreport
{
"\1\s[10]This is the bug report dialogue. \w5Report bugs to youremailaddress@emailprovider.com. \w5We were downloaded from \_a[http://www.whereveryoupostedthem.com/]some place\_a.\e"
}

//When clicked, this will automatically tell the ghost to check for updates. More detail on updates in etc.dic.
Select.keroupdatecheck
{
	"\1\s[10]\![updatebymyself]\e"
}

//--Test Variable --------------------------------------------------------
//You can also use this to test functions as I mentioned above by adding \![raise,function] at the end of it, although you can do this with Script Input as well.

//It is ALWAYS A GOOD IDEA to test your dialogue! If you won't check it with the test variable, at least test it with Script Input! It'll save you so much trouble!

Select.testvariable
{
	"\1\s[10]test.\![leave,passivemode]\e"
}
